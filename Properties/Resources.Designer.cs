//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MEditor.Properties {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MEditor.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性
        ///   重写当前线程的 CurrentUICulture 属性。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找 System.Byte[] 类型的本地化资源。
        /// </summary>
        internal static byte[] ICSharpCode_AvalonEdit {
            get {
                object obj = ResourceManager.GetObject("ICSharpCode_AvalonEdit", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   查找类似 (function(j,q,h){var A=!+&quot;\v1&quot;,n=A?&quot;\r&quot;:&quot;\n&quot;,E=function(){return null;},p=0,t=&quot;plaintext&quot;,a=&quot;sunlight-&quot;,D,s,b={tabWidth:4,classPrefix:a,showWhitespace:false,maxHeight:false},m={},r={},c={beforeHighlightNode:[],beforeHighlight:[],beforeTokenize:[],afterTokenize:[],beforeAnalyze:[],afterAnalyze:[],afterHighlight:[],afterHighlightNode:[]};D=(function(){function F(G){return function(I){var H=q.createElement(&quot;span&quot;);H.className=I.options.classPrefix+G;H.appendChild(I.createTextNode(I.tokens[I.index]));return I.a [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string sunlight_all_min {
            get {
                return ResourceManager.GetString("sunlight_all_min", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 /* global styles */
        ///.sunlight-container {
        ///	clear: both !important;
        ///	position: relative !important;
        ///	margin: 10px 0 !important;
        ///}
        ///.sunlight-code-container {
        ///	clear: both !important;
        ///	position: relative !important;
        ///	border: none;
        ///	border-color: #626262 !important;
        ///	background-color: #262626 !important;
        ///}
        ///.sunlight-highlighted, .sunlight-container, .sunlight-container textarea, .sunlight-container pre {
        ///	font-family: Consolas, Inconsolata, Monaco, &quot;Courier New&quot; !important;
        ///	font-size: 12px !important;
        ///	line-he [字符串的其余部分被截断]&quot;; 的本地化字符串。
        /// </summary>
        internal static string sunlight_dark {
            get {
                return ResourceManager.GetString("sunlight_dark", resourceCulture);
            }
        }
    }
}
